<!DOCTYPE html>
<html>
  <head>
    <title>Parkour</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans:bold">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <script src="http://whispering-everglades-6142.herokuapp.com/socket.io/socket.io.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.6.0/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js"></script>
  </head>
  <body>
    <style>
      #question {
        font-size: 18px;
        position: absolute;
        top:95px;
        width: 100%;
        height: 40px;
        font-size: 30px;
        text-align: center;
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
      }
      .answerWrapper {
        top:175px;
        width: 375px;
        height: 375px;
        margin: 0 auto;
        position: relative;
      }
      .answerImage {
        float: left;
        height:180px;
        width:180px;
        margin: 2px;
        cursor: pointer;
        cursor: hand;
        border: 2px solid #000;
      }
      #skipWrapper {
        width: 100%;
        text-align: center;
        position: relative;
        top:160px;
      }
      #skipBtn {
        width:150px;
        height:45px;
        text-decoration: none;
        color:#fff;
        background-color: #f0ad4e;
        border-color:#eea236;
        font-weight: 400;
        padding:10px 16px;
        font-size: 24px;
        padding:18px 100px;
        line-height: 4.2;
        border-radius: 6px;
        text-align: center;
        cursor: pointer;
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
      }
      #map-info-header {
        border-bottom: 1px solid #000;
      }
      #map-logo-header {
        position: absolute;
        width:100%;
        height:45px;
        background-color: #111125;
        opacity: 1;
        top:0;
      }
      #logo {
        color:#fff;
        text-align: center;
        font-size: 20px;
        font-family: 'Droid Sans';
        letter-spacing: 3px;
        line-height: 45px;
      }
      #map-canvas {
        visibility:hidden;
      }
      
      #map-info-header {
        position: absolute;
        width: 100%;
        height:50px;
        top:45px;
        background-color: #fff;
      }
    </style>
    <div id='map-logo-header'>
      <div id='logo'>1000Scientists</div>
    </div>
    <div id='map-info-header'>
        
      </div>
    <div id='allQuestions'>

    </div>
    

    <div id='skipWrapper'>
      <a onclick="skip()" id='skipBtn' class="btn btn-warning btn-lg">Skip</a>
    </div>
  </body>
  <script>
  var uncompletedTasks = [];
  var completedTasks   = [];
  var currentTaskId    = "";
  var skipped          = [];
  // 'jobId'      : jobObj['_id'],
  // 'question'      : question,
  // 'label'       : labelsLength[i],
  // 'answers'  : potentialAnswers
  var tasks    = <%- tasks %>;
  console.log(tasks);
  var allQuestions = document.getElementById('allQuestions');
  var question    = document.getElementById('question');
  var allAnswers  = document.getElementById('allAnswers');

  for(var i = 0; i < tasks.length; i++) {
    uncompletedTasks.push(tasks[i]['taskId']);
    var questionWrapper         = document.createElement('div');
    questionWrapper.className   = "questionWrapper";
    questionWrapper.id          = "q" + tasks[i]['taskId'];
    if(i === 0) {
      questionWrapper.className   = "questionWrapper currentQuestion";
      questionWrapper.style.display = 'block';
      currentTaskId = tasks[i]['taskId'];
    }
    else {
      questionWrapper.style.display = 'none';
    }
    

    var questionDiv           = document.createElement('div');
    questionDiv.id            = "question";
    questionDiv.textContent   = tasks[i]['question']

    questionWrapper.appendChild(questionDiv);

    var answerWrapper           = document.createElement('div');
    answerWrapper.className     = "answerWrapper";
    answerWrapper.id            = "a" + tasks[i]['taskId'];

    questionWrapper.appendChild(answerWrapper);
    console.log(tasks[i]);
    tasks[i]['answers'] = tasks[i]['answers'].split(",");

    for(var a = 0; a < 4; a++) {
      var answerImg                   = document.createElement('img');
      answerImg.src                   = tasks[i]['answers'][a];
      answerImg.className             = "answerImage";
      answerImg.onclick               = function() {
        var taskId = this.parentNode.id;
        alert(taskId);
        console.log(taskId);
        var cTask = {
          'taskId' : taskId,
          'answer' : this.src
        }


        var formData = new FormData();
        formData.append("taskId", taskId);
        formData.append("answer", this.src);

        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
          if(xhr.readyState === 4) {
            console.log('true');
          }
        }
        xhr.open("POST", "http://localhost:5000/completedtask",true);
        xhr.send(formData);
        completedTasks.push(cTask);
        uncompletedTasks.splice(0, 1);
        document.getElementById("q" + currentTaskId).remove();
        document.getElementById("q" + uncompletedTasks[0]).style.display = 'block';
        currentTaskId = uncompletedTasks[0];
      }
      answerWrapper.appendChild(answerImg);

    }
    allQuestions.appendChild(questionWrapper)

  }
  function skip() {
    skipped.push(currentTaskId);
    uncompletedTasks.splice(0, 1);
        document.getElementById("q" + currentTaskId).remove();
        document.getElementById("q" + uncompletedTasks[0]).style.display = 'block';
        currentTaskId = uncompletedTasks[0];
  }
  function replaceTask(task) {
    question.innerHTML = task['question'];
    for(var i = 0; i < 4; i++) {
      
    }
  }


  </script>
</html>